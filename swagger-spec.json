{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/kyc": {
      "put": {
        "operationId": "OrganizationsController_updateOrgKyc",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/bank": {
      "put": {
        "operationId": "OrganizationsController_updateBankDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/docs": {
      "put": {
        "operationId": "OrganizationsController_updateComplianceDocuments",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/catalog": {
      "put": {
        "operationId": "OrganizationsController_updateCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding": {
      "get": {
        "operationId": "OrganizationsController_getOnboardingStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/review": {
      "get": {
        "operationId": "OrganizationsController_getOnboardingReviewSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/my-organization/onboarding/submit": {
      "post": {
        "operationId": "OrganizationsController_submitOnboarding",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/admin/kyc/pending": {
      "get": {
        "operationId": "OrganizationsController_getPendingKycSubmissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/admin/kyc/{kycCaseId}": {
      "get": {
        "operationId": "OrganizationsController_getKycCaseDetails",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/admin/kyc/{kycCaseId}/approve": {
      "post": {
        "operationId": "OrganizationsController_approveKyc",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/admin/kyc/{kycCaseId}/reject": {
      "post": {
        "operationId": "OrganizationsController_rejectKyc",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/organizations/admin/kyc/{orgId}/history": {
      "get": {
        "operationId": "OrganizationsController_getKycHistory",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/kyc": {
      "post": {
        "operationId": "KycController_submitKYC",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitKycDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "KYC"
        ]
      }
    },
    "/api/v1/kyc/me": {
      "get": {
        "operationId": "KycController_getMyKYC",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "KYC"
        ]
      }
    },
    "/api/v1/kyc/me/step/{stepName}": {
      "put": {
        "operationId": "KycController_updateKYCStep",
        "parameters": [
          {
            "name": "stepName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "KYC"
        ]
      }
    },
    "/api/v1/kyc/case/{caseId}": {
      "get": {
        "operationId": "KycController_getKYCCase",
        "parameters": [
          {
            "name": "caseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "KYC"
        ]
      }
    },
    "/api/v1/catalog": {
      "post": {
        "operationId": "CatalogController_createCatalog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCatalogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create my catalog (Seller only)",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/catalog/me": {
      "get": {
        "operationId": "CatalogController_getMyCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my catalog",
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "CatalogController_updateMyCatalog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCatalogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update my catalog",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/catalog/me/categories": {
      "post": {
        "operationId": "CatalogController_addCategory",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Add category to catalog",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/catalog/me/grades": {
      "post": {
        "operationId": "CatalogController_addGrade",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Add grade to catalog",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/catalog/org/{orgId}": {
      "get": {
        "operationId": "CatalogController_getCatalogByOrgId",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get catalog by organization ID (Public)",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/catalog/search": {
      "get": {
        "operationId": "CatalogController_searchCatalogs",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grade",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Search catalogs by category/grade",
        "tags": [
          "Catalog"
        ]
      }
    },
    "/api/v1/rfq": {
      "post": {
        "operationId": "RfqController_createRFQ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRfqDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create RFQ (Buyer only)",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/rfq/{id}/publish": {
      "put": {
        "operationId": "RfqController_publishRFQ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishRfqDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Publish RFQ (Buyer only)",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/rfq/me": {
      "get": {
        "operationId": "RfqController_getMyRFQs",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my RFQs (Buyer)",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/rfq/{id}": {
      "get": {
        "operationId": "RfqController_getRFQById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get RFQ by ID",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/rfq/open": {
      "get": {
        "operationId": "RfqController_getOpenRFQs",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grade",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get open RFQs (Seller view)",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/rfq/{id}/close": {
      "put": {
        "operationId": "RfqController_closeRFQ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Close/Cancel RFQ (Buyer)",
        "tags": [
          "RFQ"
        ]
      }
    },
    "/api/v1/quotes": {
      "post": {
        "operationId": "QuotesController_submitQuote",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuoteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit quote for RFQ (Seller only)",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/quotes/me": {
      "get": {
        "operationId": "QuotesController_getMyQuotes",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my quotes (Seller)",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/quotes/rfq/{rfqId}": {
      "get": {
        "operationId": "QuotesController_getQuotesForRFQ",
        "parameters": [
          {
            "name": "rfqId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get quotes for RFQ (Buyer)",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/quotes/{id}": {
      "get": {
        "operationId": "QuotesController_getQuoteById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get quote by ID",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/quotes/{id}/accept": {
      "put": {
        "operationId": "QuotesController_acceptQuote",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptQuoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Accept quote (Buyer only)",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/quotes/{id}/withdraw": {
      "put": {
        "operationId": "QuotesController_withdrawQuote",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Withdraw quote (Seller)",
        "tags": [
          "Quotes"
        ]
      }
    },
    "/api/v1/orders": {
      "post": {
        "operationId": "OrdersController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create order from accepted quote (Internal - called by quotes service)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/me": {
      "get": {
        "operationId": "OrdersController_getMyOrders",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my orders (Buyer/Seller)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "operationId": "OrdersController_getOrderById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get order by ID",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/status": {
      "put": {
        "operationId": "OrdersController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update order status (Seller/Admin)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/dispatch-ready": {
      "put": {
        "operationId": "OrdersController_markDispatchReady",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mark order as dispatch ready (Seller)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/cancel": {
      "put": {
        "operationId": "OrdersController_cancelOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cancel order (Buyer/Seller/Admin)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/documents": {
      "get": {
        "operationId": "OrdersController_getOrderDocuments",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get order documents",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/documents/proforma-invoice": {
      "post": {
        "operationId": "OrdersController_uploadProformaInvoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload proforma invoice (Seller)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/orders/{id}/documents/tax-invoice": {
      "post": {
        "operationId": "OrdersController_uploadTaxInvoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload tax invoice (Seller)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/v1/payments": {
      "post": {
        "operationId": "PaymentsController_createPayment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Initiate payment for order (Buyer only)",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/{id}/verify": {
      "put": {
        "operationId": "PaymentsController_verifyUTR",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUtrDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Verify payment with UTR",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/{id}": {
      "get": {
        "operationId": "PaymentsController_getPaymentById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get payment by ID",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/me": {
      "get": {
        "operationId": "PaymentsController_getMyPayments",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my payments (Buyer)",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/order/{orderId}": {
      "get": {
        "operationId": "PaymentsController_getPaymentByOrderId",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get payment for order",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/{id}/release-escrow": {
      "put": {
        "operationId": "PaymentsController_releaseEscrow",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Release escrow (Admin only)",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/{id}/refund": {
      "put": {
        "operationId": "PaymentsController_refundPayment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Refund payment (Admin only)",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/shipments": {
      "post": {
        "operationId": "ShipmentsController_createShipment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShipmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create shipment (Seller assigns 3PL)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/me": {
      "get": {
        "operationId": "ShipmentsController_getMyShipments",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my shipments",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}": {
      "get": {
        "operationId": "ShipmentsController_getShipmentById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get shipment by ID",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/milestones": {
      "post": {
        "operationId": "ShipmentsController_updateMilestone",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMilestoneDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update milestone (3PL, Seller)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/documents": {
      "post": {
        "operationId": "ShipmentsController_uploadDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadDocumentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload document (Seller/3PL)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/pod": {
      "post": {
        "operationId": "ShipmentsController_uploadPOD",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload POD (3PL)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/documents/{docId}/verify": {
      "put": {
        "operationId": "ShipmentsController_verifyDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "docId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Verify document (Admin)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/tracking": {
      "get": {
        "operationId": "ShipmentsController_getTracking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get shipment tracking",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/shipments/{id}/deliver": {
      "put": {
        "operationId": "ShipmentsController_markDelivered",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mark shipment as delivered (3PL)",
        "tags": [
          "Shipments"
        ]
      }
    },
    "/api/v1/disputes": {
      "post": {
        "operationId": "DisputesController_raiseDispute",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RaiseDisputeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Raise dispute (Buyer/Seller)",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/me": {
      "get": {
        "operationId": "DisputesController_getMyDisputes",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my disputes",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/{id}": {
      "get": {
        "operationId": "DisputesController_getDisputeById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get dispute by ID",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/{id}/evidence": {
      "post": {
        "operationId": "DisputesController_uploadEvidence",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload evidence",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/{id}/resolve": {
      "put": {
        "operationId": "DisputesController_resolveDispute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveDisputeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Resolve dispute (Admin only)",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/{id}/assign": {
      "put": {
        "operationId": "DisputesController_assignDispute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Assign dispute to admin (Admin)",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/order/{orderId}": {
      "get": {
        "operationId": "DisputesController_getDisputesByOrder",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get disputes by order",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/disputes/order/{orderId}/window-status": {
      "get": {
        "operationId": "DisputesController_checkDisputeWindow",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Check if dispute window is open",
        "tags": [
          "Disputes"
        ]
      }
    },
    "/api/v1/settlements/batches": {
      "post": {
        "operationId": "SettlementsController_createBatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBatchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create settlement batch (Admin only)",
        "tags": [
          "Settlements"
        ]
      },
      "get": {
        "operationId": "SettlementsController_getAllBatches",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all settlement batches (Admin)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/batches/{id}": {
      "get": {
        "operationId": "SettlementsController_getBatchById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get settlement batch by ID",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/batches/{id}/run-payouts": {
      "post": {
        "operationId": "SettlementsController_runPayouts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunPayoutsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Run payouts for batch (Admin)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/payouts/me": {
      "get": {
        "operationId": "SettlementsController_getMyPayouts",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my payouts (Seller/3PL)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/payouts/{id}": {
      "get": {
        "operationId": "SettlementsController_getPayoutById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get payout by ID",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/payouts/{id}/confirm": {
      "put": {
        "operationId": "SettlementsController_confirmPayout",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mark payout as confirmed (Admin)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/summary": {
      "get": {
        "operationId": "SettlementsController_getSettlementSummary",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get settlement summary for period (Admin)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/settlements/history/me": {
      "get": {
        "operationId": "SettlementsController_getMySettlementHistory",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get my settlement history (Seller/3PL)",
        "tags": [
          "Settlements"
        ]
      }
    },
    "/api/v1/buyer/orders": {
      "get": {
        "operationId": "BuyerController_getMyOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Buyer"
        ]
      }
    },
    "/api/v1/buyer/payments": {
      "get": {
        "operationId": "BuyerController_getMyPayments",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Buyer"
        ]
      }
    },
    "/api/v1/seller/catalog": {
      "put": {
        "operationId": "SellerController_updateCatalog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCatalogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Seller"
        ]
      }
    },
    "/api/v1/admin/kyc/pending": {
      "get": {
        "operationId": "KycAdminController_getPendingKycCases",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin KYC"
        ]
      }
    },
    "/api/v1/admin/kyc/case/{kycCaseId}": {
      "get": {
        "operationId": "KycAdminController_getKycCaseById",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin KYC"
        ]
      }
    },
    "/api/v1/admin/kyc/case/{kycCaseId}/approve": {
      "post": {
        "operationId": "KycAdminController_approveKyc",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin KYC"
        ]
      }
    },
    "/api/v1/admin/kyc/case/{kycCaseId}/reject": {
      "post": {
        "operationId": "KycAdminController_rejectKyc",
        "parameters": [
          {
            "name": "kycCaseId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin KYC"
        ]
      }
    },
    "/api/v1/admin/kyc/org/{orgId}/history": {
      "get": {
        "operationId": "KycAdminController_getKycHistory",
        "parameters": [
          {
            "name": "orgId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin KYC"
        ]
      }
    },
    "/api/v1/admin/price-monitor": {
      "get": {
        "operationId": "PriceMonitorController_getPriceIndices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Price Monitor"
        ]
      }
    },
    "/api/v1/admin/settlements/batches": {
      "post": {
        "operationId": "SettlementsAdminController_createBatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBatchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Settlements"
        ]
      },
      "get": {
        "operationId": "SettlementsAdminController_listBatches",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Settlements"
        ]
      }
    },
    "/api/v1/admin/settlements/batches/{id}/run-payouts": {
      "post": {
        "operationId": "SettlementsAdminController_runPayouts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunPayoutsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Settlements"
        ]
      }
    },
    "/api/v1/3pl/assign-shipment": {
      "post": {
        "operationId": "ThreePLController_assignShipment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "3PL"
        ]
      }
    }
  },
  "info": {
    "title": "B2B Marketplace API",
    "description": "Backend API for B2B Marketplace Platform",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "BUYER",
              "SELLER",
              "ADMIN",
              "3PL"
            ]
          },
          "organizationName": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "mobile",
          "role",
          "organizationName"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "accessToken",
          "user"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SubmitKycDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCatalogDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCatalogDto": {
        "type": "object",
        "properties": {}
      },
      "CreateRfqDto": {
        "type": "object",
        "properties": {}
      },
      "PublishRfqDto": {
        "type": "object",
        "properties": {}
      },
      "CreateQuoteDto": {
        "type": "object",
        "properties": {}
      },
      "AcceptQuoteDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateOrderStatusDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {}
      },
      "VerifyUtrDto": {
        "type": "object",
        "properties": {}
      },
      "CreateShipmentDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateMilestoneDto": {
        "type": "object",
        "properties": {}
      },
      "UploadDocumentDto": {
        "type": "object",
        "properties": {}
      },
      "RaiseDisputeDto": {
        "type": "object",
        "properties": {}
      },
      "ResolveDisputeDto": {
        "type": "object",
        "properties": {}
      },
      "CreateBatchDto": {
        "type": "object",
        "properties": {}
      },
      "RunPayoutsDto": {
        "type": "object",
        "properties": {}
      },
      "AssignmentDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}